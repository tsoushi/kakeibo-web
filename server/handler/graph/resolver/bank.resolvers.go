package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"kakeibo-web-server/domain"
	"kakeibo-web-server/handler/graph"
	"kakeibo-web-server/lib/ctxdef"

	"golang.org/x/xerrors"
)

// ID is the resolver for the id field.
func (r *bankResolver) ID(ctx context.Context, obj *domain.Bank) (string, error) {
	return string(obj.ID), nil
}

// CreateBank is the resolver for the createBank field.
func (r *mutationResolver) CreateBank(ctx context.Context, input domain.CreateBankInput) (*domain.Bank, error) {
	userID, err := ctxdef.UserID(ctx)
	if err != nil {
		return nil, xerrors.Errorf(": %w", err)
	}

	bank, err := r.usecase.CreateBank(ctx, userID, input.Name)
	if err != nil {
		return nil, xerrors.Errorf(": %w", err)
	}

	return bank, nil
}

// Bank returns graph.BankResolver implementation.
func (r *Resolver) Bank() graph.BankResolver { return &bankResolver{r} }

type bankResolver struct{ *Resolver }
