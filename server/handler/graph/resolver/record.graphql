type AssetChange {
    asset: Asset!
    amount: Int!
}

type Record {
    id: ID!
    recordType: RecordType!
    title: String!
    description: String!
    at: Time!
    assetChangeIncome: AssetChange
    assetChangeExpense: AssetChange
    tags: [Tag!]!
}

enum RecordType {
  EXPENSE
  INCOME
  TRANSFER
}

type RecordConnection {
    nodes: [Record!]!
    pageInfo: PageInfo!
    totalAssets: Int!
}

enum RecordSortKey {
    AT
}

extend type Query {
    record(id: ID!): Record!
    records(assetID: ID, sortKey: RecordSortKey! = AT, first: Int, after: PageCursor, last: Int, before: PageCursor): RecordConnection!
    recordsPerMonth(year: Int!, month: Int!, tagNames: [String!], assetIds: [ID!], recordTypes: [RecordType!], sortkey: RecordSortKey! = AT, first: Int, after: PageCursor, last: Int, before: PageCursor): RecordConnection!
}

extend type Mutation {
    createIncomeRecord(input: createIncomeRecordInput!): Record!
    createExpenseRecord(input: createExpenseRecordInput!): Record!
    createTransferRecord(input: createTransferRecordInput!): Record!
    
    updateIncomeRecord(input: updateIncomeRecordInput!): Record!
    updateExpenseRecord(input: updateExpenseRecordInput!): Record!
    updateTransferRecord(input: updateTransferRecordInput!): Record!
    
    deleteRecord(id: ID!): Record!
}

input createIncomeRecordInput {
    title: String! 
    description: String!
    at: Time!
    assetID: ID!
    amount: Int!
    tags: [String!]!
}

input createExpenseRecordInput {
    title: String! 
    description: String!
    at: Time!
    assetID: ID!
    amount: Int!
    tags: [String!]!
}

input createTransferRecordInput {
    title: String! 
    description: String!
    at: Time!
    fromAssetID: ID!
    toAssetID: ID!
    amount: Int!
    tags: [String!]!
}

input updateIncomeRecordInput {
    id: ID!
    title: String! 
    description: String!
    at: Time!
    assetID: ID!
    amount: Int!
    tags: [String!]!
}

input updateExpenseRecordInput {
    id: ID!
    title: String! 
    description: String!
    at: Time!
    assetID: ID!
    amount: Int!
    tags: [String!]!
}

input updateTransferRecordInput {
    id: ID!
    title: String! 
    description: String!
    at: Time!
    fromAssetID: ID!
    toAssetID: ID!
    amount: Int!
    tags: [String!]!
}