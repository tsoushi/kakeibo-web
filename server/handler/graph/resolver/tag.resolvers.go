package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"fmt"
	"kakeibo-web-server/domain"
	"kakeibo-web-server/handler/graph"
	"kakeibo-web-server/lib/ctxdef"

	"golang.org/x/xerrors"
)

// CreateTag is the resolver for the createTag field.
func (r *mutationResolver) CreateTag(ctx context.Context, input domain.CreateTagInput) (*domain.Tag, error) {
	userID, err := ctxdef.UserID(ctx)
	if err != nil {
		return nil, xerrors.Errorf(": %w", err)
	}

	tag, err := r.usecase.CreateTag(ctx, userID, input.Name)
	if err != nil {
		return nil, xerrors.Errorf(": %w", err)
	}

	return tag, nil
}

// ID is the resolver for the id field.
func (r *tagResolver) ID(ctx context.Context, obj *domain.Tag) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Tag returns graph.TagResolver implementation.
func (r *Resolver) Tag() graph.TagResolver { return &tagResolver{r} }

type tagResolver struct{ *Resolver }
